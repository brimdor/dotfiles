{{ $nvimArch := .chezmoi.arch }}
{{ if eq $nvimArch "arm64" }}{{ $nvimArch = "arm64" }}{{ end }}
{{ if eq $nvimArch "amd64" }}{{ $nvimArch = "x86_64" }}{{ end }}

[".local/opt/nvim"]
    type            = "archive"
    url             = "https://github.com/neovim/neovim/releases/download/v{{ template "get-github-latest-version" list "neovim/neovim" }}/nvim-linux-{{ $nvimArch }}.tar.gz"
    stripComponents = 1
    refreshPeriod   = "168h"

{{ $jnvArch := .chezmoi.arch }}
{{ if eq $jnvArch "arm64" }}{{ $jnvArch = "aarch64" }}{{ end }}
{{ if eq $jnvArch "amd64" }}{{ $jnvArch = "x86_64" }}{{ end }}

[".local/bin/jnv"]
    type = "archive-file"
    url = "https://github.com/ynqa/jnv/releases/download/v{{ template "get-github-latest-version" list "ynqa/jnv" }}/jnv-{{ $jnvArch }}-unknown-linux-gnu.tar.xz"
    path = "jnv-{{ $jnvArch }}-unknown-linux-gnu/jnv"
    executable = true
    refreshPeriod = "168h"

{{ $zoxideArch := .chezmoi.arch }}
{{ if eq $zoxideArch "arm64" }}{{ $zoxideArch = "aarch64" }}{{ end }}
{{ if eq $zoxideArch "amd64" }}{{ $zoxideArch = "x86_64" }}{{ end }}

[".local/bin/zoxide"]
    type = "archive-file"
    url = "https://github.com/ajeetdsouza/zoxide/releases/download/v{{ template "get-github-latest-version" list "ajeetdsouza/zoxide" }}/zoxide-{{ template "get-github-latest-version" list "ajeetdsouza/zoxide" }}-{{ $zoxideArch }}-unknown-linux-musl.tar.gz"
    path = "zoxide"
    executable = true
    refreshPeriod = "168h"

{{ $deltaArch := .chezmoi.arch }}
{{ if eq $deltaArch "arm64" }}{{ $deltaArch = "aarch64" }}{{ end }}
{{ if eq $deltaArch "amd64" }}{{ $deltaArch = "x86_64" }}{{ end }}

[".local/bin/delta"]
    type = "archive-file"
    url = "https://github.com/dandavison/delta/releases/download/{{ template "get-github-latest-version" list "dandavison/delta" }}/delta-{{ template "get-github-latest-version" list "dandavison/delta" }}-{{ $deltaArch }}-unknown-linux-gnu.tar.gz"
    path = "delta-{{ template "get-github-latest-version" list "dandavison/delta" }}-{{ $deltaArch }}-unknown-linux-gnu/delta"
    executable = true
    refreshPeriod = "168h"

# ghq
{{ $ghqOS := .chezmoi.os }}
{{ if eq $ghqOS "darwin" }}{{ $ghqOS = "darwin" }}{{ end }}
{{ if eq $ghqOS "linux" }}{{ $ghqOS = "linux" }}{{ end }}

{{ $ghqArch := .chezmoi.arch }}
{{ if eq $ghqArch "amd64" }}{{ $ghqArch = "amd64" }}{{ end }}
{{ if eq $ghqArch "arm64" }}{{ $ghqArch = "arm64" }}{{ end }}

[".local/bin/ghq"]
    type = "archive-file"
    url = "https://github.com/x-motemen/ghq/releases/download/v{{ template "get-github-latest-version" list "x-motemen/ghq" }}/ghq_{{ $ghqOS }}_{{ $ghqArch }}.zip"
    path = "ghq_{{ $ghqOS }}_{{ $ghqArch }}/ghq"
    executable = true
    refreshPeriod = "168h"

[".local/completions/_ghq"]
    type = "archive-file"
    url = "https://github.com/x-motemen/ghq/releases/download/v{{ template "get-github-latest-version" list "x-motemen/ghq" }}/ghq_{{ $ghqOS }}_{{ $ghqArch }}.zip"
    path = "ghq_{{ $ghqOS }}_{{ $ghqArch }}/misc/zsh/_ghq"
    executable = true
    refreshPeriod = "168h"

# krew
{{ $krewOS := .chezmoi.os }}
{{ $krewArch := .chezmoi.arch }}
{{ if eq $krewArch "amd64" }}{{ $krewArch = "amd64" }}{{ end }}
{{ if eq $krewArch "arm64" }}{{ $krewArch = "arm64" }}{{ end }}
{{ if and (eq $krewOS "linux") (eq $krewArch "arm") }}{{ $krewArch = "arm" }}{{ end }} # For krew-linux_arm.tar.gz (they have this odd one)

[".local/bin/kubectl-krew"]
    type = "archive-file"
    url = "https://github.com/kubernetes-sigs/krew/releases/download/v{{ template "get-github-latest-version" list "kubernetes-sigs/krew" }}/krew-{{ $krewOS }}_{{ $krewArch }}.tar.gz"
    path = "./krew-{{ $krewOS }}_{{ $krewArch }}"
    executable = true
    refreshPeriod = "168h"

# fzf
[".local/bin/fzf"]
    type = "archive-file"
    url = "https://github.com/junegunn/fzf/releases/download/v{{ template "get-github-latest-version" list "junegunn/fzf" }}/fzf-{{ template "get-github-latest-version" list "junegunn/fzf" }}-{{ .chezmoi.os }}_{{ .chezmoi.arch }}.tar.gz"
    executable = true
    path = "fzf"
    refreshPeriod = "168h"

[".local/bin/jq"]
    type = "file"
    url = "https://github.com/jqlang/jq/releases/download/{{ template "get-github-latest-version" list "jqlang/jq" }}/jq-linux-{{ .chezmoi.arch }}"
    executable = true
    refreshPeriod = "168h"

[".local/bin/argocd"]
    type = "file"
    url = "https://github.com/argoproj/argo-cd/releases/download/v{{ template "get-github-latest-version" list "argoproj/argo-cd" }}/argocd-linux-{{ .chezmoi.arch }}"
    executable = true
    refreshPeriod = "168h"

[".local/bin/helm"]
    type = "archive-file"
    url = "https://get.helm.sh/helm-v{{ template "get-github-latest-version" list "helm/helm" }}-linux-{{ .chezmoi.arch }}.tar.gz"
    path = "linux-{{ .chezmoi.arch }}/helm"
    executable = true
    refreshPeriod = "168h"

[".local/bin/gron"]
    type = "archive-file"
    url = "https://github.com/tomnomnom/gron/releases/download/v{{ template "get-github-latest-version" list "tomnomnom/gron" }}/gron-linux-{{ .chezmoi.arch }}-{{ template "get-github-latest-version" list "tomnomnom/gron" }}.tgz"
    path = "gron"
    executable = true
    refreshPeriod = "168h"

[".local/bin/kubectl"]
    type = "file"
    url = "https://dl.k8s.io/release/v{{ template "get-github-latest-version" list "kubernetes/kubernetes" }}/bin/linux/{{ .chezmoi.arch }}/kubectl"
    executable = true
    refreshPeriod = "168h"

[".local/bin/terraform"]
    type = "archive-file"
    url = "https://releases.hashicorp.com/terraform/{{ template "get-github-latest-version" list "hashicorp/terraform" }}/terraform_{{ template "get-github-latest-version" list "hashicorp/terraform" }}_linux_{{ .chezmoi.arch }}.zip"
    path = "terraform"
    executable = true
    refreshPeriod = "168h"

[".oh-my-zsh/custom/plugins/zsh-autosuggestions"]
    type = "archive"
    url = "https://github.com/zsh-users/zsh-autosuggestions/archive/master.tar.gz"
    exact = true
    stripComponents = 1
    refreshPeriod = "168h"

[".oh-my-zsh"]
    type = "archive"
    url = "https://github.com/ohmyzsh/ohmyzsh/archive/master.tar.gz"
    exact = true
    stripComponents = 1
    refreshPeriod = "168h"

[".oh-my-zsh/custom/plugins/zsh-syntax-highlighting"]
    type = "archive"
    url = "https://github.com/zsh-users/zsh-syntax-highlighting/archive/master.tar.gz"
    exact = true
    stripComponents = 1
    refreshPeriod = "168h"

[".oh-my-zsh/custom/themes/powerlevel10k"]
    type = "archive"
    url = "https://github.com/romkatv/powerlevel10k/archive/master.tar.gz"
    exact = true
    stripComponents = 1

[".config/tmux/tmux.conf"]
    type = "file"
    url = "https://raw.githubusercontent.com/gpakosz/.tmux/refs/heads/master/.tmux.conf"
    exact = true
    stripComponents = 1
    refreshPeriod = "168h"

[".tmux/plugins/tmux-resurrect"]
    type = "archive"
    url = "https://github.com/tmux-plugins/tmux-resurrect/archive/master.tar.gz"
    exact = true
    stripComponents = 1
    refreshPeriod = "168h"

[".config/nvim"]
    type = "archive"
    url = "https://github.com/llajas/kickstart.nvim/archive/master.tar.gz"
    exact = true
    stripComponents = 1
    refreshPeriod = "168h"

[".config/nvim/lua/custom/plugins/lualine.lua"]
    type = "file"
    url = "https://raw.githubusercontent.com/xero/dotfiles/refs/heads/main/neovim/.config/nvim/lua/plugins/lualine.lua"
    exact = true
    stripComponents = 1
    refreshPeriod = "168h"

[".config/nvim/pack/github/start/copilot.vim"]
    type = "archive"
    url = "https://github.com/github/copilot.vim/archive/master.tar.gz"
    exact = true
    stripComponents = 1
    refreshPeriod = "168h"
